version: 2.1
jobs:
  build:
    docker:
      - image: cimg/python:3.10.1

      
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: Configure Git
          command: |
            git config --global user.email "kabiridorsa@gmail.com"
            git config --global user.name "Dorsa74"


      - run:
          name: Extract File Name
          command: |
            # Read the content of the text file
            ls
            file_content=$(cat name.txt)

            # Extract the file name using grep (replace with appropriate pattern)
            file_name=$(echo "$file_content" | grep -oP 'Applicatio name = \K.*')

            # Store the file name in an environment variable
            echo "Extracted File Name: $file_name"
            echo "export EXTRACTED_FILE_NAME=$file_name" >> $BASH_ENV

  
      - run:
          name: Check if file exists
          command: |
            if [ -f $EXTRACTED_FILE_NAME ]; then
              echo "File $EXTRACTED_FILE_NAME already exists."
            else
              echo "File $EXTRACTED_FILE_NAME does not exist, skipping file creation and configuration"
              echo "This commit was created automatically." > $EXTRACTED_FILE_NAME
              git add $EXTRACTED_FILE_NAME
              git commit -m "Add commit file"
              git push origin main  # Adjust branch name as needed
            fi
            
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Running tests
          command: |
            . venv/bin/activate
            python3 tests.py
      - run:
          name: List Contents of Directory
          command: ls -l /home/circleci/project/
      - store_artifacts:
          path: test-reports/
          destination: automation_testing
